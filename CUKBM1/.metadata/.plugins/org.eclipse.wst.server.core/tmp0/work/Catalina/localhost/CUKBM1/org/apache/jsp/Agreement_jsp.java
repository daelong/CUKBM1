/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.17
 * Generated at: 2019-06-04 10:55:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Agreement_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction check(){\r\n");
      out.write("\t\tvar req = document.form.req.checked;\r\n");
      out.write("\t\tvar num=0;\r\n");
      out.write("\t\tif(req==true) num=1;\r\n");
      out.write("\t\tif(num==1)\r\n");
      out.write("\t\t\tdocument.form.submit();\r\n");
      out.write("\t\telse\r\n");
      out.write("\t\t\talert(\"이용 약관에 동의하셔야 합니다.\")\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction nocheck(){\r\n");
      out.write("\t\talert(\"동의하지 않으면 가입하실 수 없습니다.\")\r\n");
      out.write("\t\tlocation.href=\"Agreement.jsp;\"\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>이용 약관 동의</title>\r\n");
      out.write("<style>\r\n");
      out.write("\tdiv.title{\r\n");
      out.write("\t\twidth: 1000px;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\tmargin-left: -450px;\r\n");
      out.write("\t\tmargin-top: 100px;\r\n");
      out.write("\t\tfont: bold 15px, sans-serif;\r\n");
      out.write("\t}\r\n");
      out.write("\tdiv.join{\r\n");
      out.write("\t\twidth: 1000px;\r\n");
      out.write("\t\tmargin-left: -500px;\r\n");
      out.write("\t\tpadding: 50px 100px;\r\n");
      out.write("\t}\r\n");
      out.write("\ttable{\r\n");
      out.write("\t\twidth: 900px;\r\n");
      out.write("\t\tborder: 3px solid black;\r\n");
      out.write("\t\tborder-collapse: collapse;\r\n");
      out.write("\t}\r\n");
      out.write("\ttd{\r\n");
      out.write("\t\tborder: 1px solid black;\t\r\n");
      out.write("\t}\r\n");
      out.write("\ttfoot{\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\tp.pinfo{\r\n");
      out.write("\t\tpadding-left: 20px;\r\n");
      out.write("\t\twidth: 900px;\r\n");
      out.write("\t\theight: 150px;\r\n");
      out.write("\t\toverflow: auto;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div style=\"width: 0px; margin:auto;\">\r\n");
      out.write("\t<div class=\"title\"><h2>Join Member</h2></div>\r\n");
      out.write("\t<div class=join>\r\n");
      out.write("\t<form action=\"SignUp.jsp\" method=\"post\" name=\"form\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<caption>약관 동의</caption>\r\n");
      out.write("\t\t\t <tfoot>\r\n");
      out.write("\t\t\t \t <tr>\r\n");
      out.write("\t\t\t \t \t<td>\r\n");
      out.write("\t\t\t \t \t\t<input type=\"checkbox\" name=\"req\"> 전체 약관에 동의합니다.<br>\r\n");
      out.write("\t\t\t \t \t\t<input type=\"button\" value=\"동의\" onclick=\"check()\"/>&nbsp;&nbsp;&nbsp;\r\n");
      out.write("   \t\t \t\t\t\t<input type=\"button\" value=\"동의하지 않습니다\" onclick=\"nocheck()\"/>\r\n");
      out.write("\t\t\t \t \t</td>\r\n");
      out.write("\t\t\t \t </tr>\r\n");
      out.write("\t\t\t \t \r\n");
      out.write("\t\t\t \t </tfoot>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t <tr><th>[필수] 이용 약관 동의</th></tr>\r\n");
      out.write("\t\t\t <tr>\r\n");
      out.write("\t\t\t \t<td>\r\n");
      out.write("\t\t\t \t<p class=\"pinfo\">\r\n");
      out.write("\t\t\t \t ■ 회원정보는 웹 사이트의 운영을 위해서만 사용됩니다.<br>\r\n");
      out.write("\t\t\t \t ■ 웹 사이트의 정상 운영을 방해하는 회원은 탈퇴 처리합니다.<br>\r\n");
      out.write("\t\t\t \t </p>\r\n");
      out.write("\t\t\t \t</td>\r\n");
      out.write("\t\t\t </tr>\r\n");
      out.write("\t\t\t <tr><th>[필수] 개인정보 수집 및 이용 동의</th></tr>\r\n");
      out.write("\t\t\t <tr>\r\n");
      out.write("\t\t\t \t<td style=\"padding: 20px;\">\r\n");
      out.write("\t\t\t \t <p class=\"pinfo\">\r\n");
      out.write("\t\t\t \t ■ 개인정보의 수집 및 이용목적<br>\r\n");
      out.write("\t\t\t\t본 사이트는 수집한 개인정보를 다음의 목적을 위해 활용합니다.<br>\r\n");
      out.write("\t\t\t\tο 서비스 제공에 관한 계약 이행<br>\r\n");
      out.write("\t\t\t\tο 회원 관리<br>\r\n");
      out.write("\t\t\t\t회원제 서비스 이용에 따른 본인확인 , 개인 식별 , 연령확인 , 고지사항 전달<br>\r\n");
      out.write("\t\t\t\tο 마케팅 및 광고에 활용<br>\r\n");
      out.write("\t\t\t\t접속 빈도 파악 또는 회원의 서비스 이용에 대한 통계<br><br>\r\n");
      out.write("\t\t\t\t■ 개인정보의 보유 및 이용기간<br>\r\n");
      out.write("\t\t\t\t회사는 개인정보 수집 및 이용목적이 달성된 후에는 예외 없이 해당 정보를 지체 없이 파기합니다.<br><br>\r\n");
      out.write("\t\t\t\t■ 개인정보의 제3자 제공에 관한 사항<br>\r\n");
      out.write("\t\t\t\t본 사이트는 정보주체의 동의, 법률의 특별한 규정 등 개인정보 보호법 제17조 및 제18조에 해당하는 경우에만 개인정보를 제3자에게 제공합니다.<br>\r\n");
      out.write("\t\t\t\to 제공받는 자의 개인정보 이용목적<br>\r\n");
      out.write("\t\t\t\t로그인ID, 생년월일, 휴대전화번호, 서비스 이용 기록, 학과, 나이\r\n");
      out.write("\t\t\t \t </p><br>\t\t \t \t\t \t \r\n");
      out.write("\t\t\t \t</td>\r\n");
      out.write("\t\t\t </tr>\t\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
